INSERT INTO interview (id, title, created_at, updated_at, created_by, updated_by) VALUES (1, 'Design', NOW(), NOW(), 1, 1);
INSERT INTO interview (id, title, created_at, updated_at, created_by, updated_by) VALUES (2, 'Development', NOW(), NOW(), 1, 1);
INSERT INTO interview (id, title, created_at, updated_at, created_by, updated_by) VALUES (3, 'Planning', NOW(), NOW(), 1, 1);
INSERT INTO interview (id, title, created_at, updated_at, created_by, updated_by) VALUES (4, 'Video Editing', NOW(), NOW(), 1, 1);

-- JobRole 데이터 삽입
INSERT INTO skill (id, title, job_id, created_at, updated_at, created_by, updated_by) VALUES (1, 'Frontend', 2, NOW(), NOW(), 1, 1);
INSERT INTO skill (id, title, job_id, created_at, updated_at, created_by, updated_by) VALUES (2, 'Backend', 2, NOW(), NOW(), 1, 1);
INSERT INTO skill (id, title, job_id, created_at, updated_at, created_by, updated_by) VALUES (3, 'App Development', 2, NOW(), NOW(), 1, 1);
INSERT INTO skill (id, title, job_id, created_at, updated_at, created_by, updated_by) VALUES (4, 'UI/UX Design', 1, NOW(), NOW(), 1, 1);
INSERT INTO skill (id, title, job_id, created_at, updated_at, created_by, updated_by) VALUES (5, 'Graphic Design', 1, NOW(), NOW(), 1, 1);
INSERT INTO skill (id, title, job_id, created_at, updated_at, created_by, updated_by) VALUES (6, 'Project Management', 3, NOW(), NOW(), 1, 1);
INSERT INTO skill (id, title, job_id, created_at, updated_at, created_by, updated_by) VALUES (7, 'Video Editing', 4, NOW(), NOW(), 1, 1);

-- 새로운 카테고리 추가
INSERT INTO interview_category (id, name) VALUES
                                              (1, 'spring'),
                                              (2, 'network'),
                                              (3, 'java'),
                                              (4, 'HTML/CSS'),
                                              (5, 'JavaScript'),
                                              (6, 'Performance Optimization'),
                                              (7, 'System Design'),
                                              (8, 'Mobile Development'),
                                              (9, 'UI/UX Principles'),
                                              (10, 'Graphic Design Basics'),
                                              (11, 'Project Management'),
                                              (12, 'Video Editing Techniques');


-- Quiz 데이터 삽입
INSERT INTO interview_question (id, question, ideal_answer, role_id, interview_category_id,
                                created_at, updated_at, created_by, updated_by) VALUES
                (1, 'Explain the difference between HTTP GET and POST methods.', 'GET is used to request data from a specified resource. POST is used to submit data to be processed to a specified resource.', 2, 2, NOW(), NOW(), 1, 1),
                (2, 'What Is Spring Framework?', 'Spring is the most broadly used framework for the development of Java Enterprise Edition applications. Further, the core features of Spring can be used in developing any Java application. We use its extensions for building various web applications on top of the Jakarta EE platform. We can also just use its dependency injection provisions in simple standalone applications.', 2, 1, NOW(), NOW(), 1, 1),
                (3, 'What Are the Benefits of Using Spring?', 'Spring targets to make Jakarta EE development easier, so let’s look at the advantages:\n\nLightweight – There is a slight overhead of using the framework in development.\nInversion of Control (IoC) – Spring container takes care of wiring dependencies of various objects instead of creating or looking for dependent objects.\nAspect-Oriented Programming (AOP) – Spring supports AOP to separate business logic from system services.\nIoC container – manages Spring Bean life cycle and project-specific configurations\nMVC framework – used to create web applications or RESTful web services, capable of returning XML/JSON responses\nTransaction management – reduces the amount of boilerplate code in JDBC operations, file uploading, etc., either by using Java annotations or by Spring Bean XML configuration file\nException Handling – Spring provides a convenient API for translating technology-specific exceptions into unchecked exceptions.', 2, 1, NOW(), NOW(), 1, 1),
                (4, 'What Spring Sub-Projects Do You Know? Describe Them Briefly.', 'Core – a key module that provides fundamental parts of the framework, such as IoC or DI\nJDBC – enables a JDBC-abstraction layer that removes the need to do JDBC coding for specific vendor databases\nORM integration – provides integration layers for popular object-relational mapping APIs, such as JPA, JDO and Hibernate\nWeb – a web-oriented integration module that provides multipart file upload, Servlet listeners and web-oriented application context functionalities\nMVC framework – a web module implementing the Model View Controller design pattern\nAOP module – aspect-oriented programming implementation allowing the definition of clean method-interceptors and pointcuts', 2, 1, NOW(), NOW(), 1, 1),
                (5, 'What Is Dependency Injection?', 'Dependency injection, an aspect of Inversion of Control (IoC), is a general concept stating that we do not create our objects manually but instead describe how they should be created. Then an IoC container will instantiate required classes if needed.', 2, 1, NOW(), NOW(), 1, 1),
                (6, 'How Can We Inject Beans in Spring?', 'A few different options exist in order to inject Spring beans:\n\nSetter injection\nConstructor injection\nField injection\nThe configuration can be done using XML files or annotations.', 2, 1, NOW(), NOW(), 1, 1),
                (7, 'Which Is the Best Way of Injecting Beans and Why?', 'The recommended approach is to use constructor arguments for mandatory dependencies and setters for optional ones. This is because constructor injection allows injecting values to immutable fields and makes testing easier.', 2, 1, NOW(), NOW(), 1, 1),
                (8, 'What Is the Difference Between BeanFactory and ApplicationContext?', 'BeanFactory is an interface representing a container that provides and manages bean instances. The default implementation instantiates beans lazily when getBean() is called. In contrast, ApplicationContext is an interface representing a container holding all information, metadata and beans in the application. It also extends the BeanFactory interface, but the default implementation instantiates beans eagerly when the application starts. However, this behavior can be overridden for individual beans.', 2, 1, NOW(), NOW(), 1, 1),
                (9, 'What Is a Spring Bean?', 'The Spring Beans are Java Objects that are initialized by the Spring IoC container.', 2, 1, NOW(), NOW(), 1, 1),
                (10, 'What Is the Default Bean Scope in Spring Framework?', 'By default, a Spring Bean is initialized as a singleton.', 2, 1, NOW(), NOW(), 1, 1),
                (11, 'How to Define the Scope of a Bean?', 'In order to set Spring Bean’s scope, we can use @Scope annotation or “scope” attribute in XML configuration files. Note that there are five supported scopes:\n\nSingleton\nPrototype\nRequest\nSession\nGlobal-session', 2, 1, NOW(), NOW(), 1, 1),
                (12, 'Are Singleton Beans Thread-Safe?', 'No, singleton beans are not thread-safe, as thread safety is about execution, whereas the singleton is a design pattern focusing on creation. Thread safety depends only on the bean implementation itself.', 2, 1, NOW(), NOW(), 1, 1),
                (13, 'What Does the Spring Bean Life Cycle Look Like?', 'First, a Spring bean needs to be instantiated based on Java or XML bean definition. It may also be required to perform some initialization to get it into a usable state. After that, when the bean is no longer required, it will be removed from the IoC container.', 2, 1, NOW(), NOW(), 1, 1),
                (14, 'What Is the Spring Java-Based Configuration?', 'It’s one of the ways of configuring Spring-based applications in a type-safe manner. It’s an alternative to the XML-based configuration.', 2, 1, NOW(), NOW(), 1, 1),
                (15, 'Can We Have Multiple Spring Configuration Files in One Project?', 'Yes, in large projects, having multiple Spring configurations is recommended to increase maintainability and modularity. We can load multiple Java-based configuration files:\n@Configuration\n@Import({MainConfig.class, SchedulerConfig.class})\npublic class AppConfig {\n}\nOr we can load one XML file that will contain all other configs:\nApplicationContext context = new ClassPathXmlApplicationContext("spring-all.xml");\nAnd inside this XML file we’ll have the following:\n<import resource="main.xml"/>\n<import resource="scheduler.xml"/>', 2, 1, NOW(), NOW(), 1, 1),
                (16, 'What Is Spring Security?', 'Spring Security is a separate module of the Spring framework that focuses on providing authentication and authorization methods in Java applications. It also takes care of most of the common security vulnerabilities such as CSRF attacks. To use Spring Security in web applications, we can get started with the simple annotation @EnableWebSecurity.', 2, 1, NOW(), NOW(), 1, 1),
                (17, 'What Is Spring Boot?', 'Spring Boot is a project that provides a pre-configured set of frameworks to reduce boilerplate configuration. This way, we can have a Spring application up and running with the smallest amount of code.', 2, 1, NOW(), NOW(), 1, 1),
                (18, 'Name Some of the Design Patterns Used in the Spring Framework?', 'Singleton Pattern – singleton-scoped beans\nFactory Pattern – Bean Factory classes\nPrototype Pattern – prototype-scoped beans\nAdapter Pattern – Spring Web and Spring MVC\nProxy Pattern – Spring Aspect-Oriented Programming support\nTemplate Method Pattern – JdbcTemplate, HibernateTemplate, etc.\nFront Controller – Spring MVC DispatcherServlet\nData Access Object – Spring DAO support\nModel View Controller – Spring MVC', 2, 1, NOW(), NOW(), 1, 1),
                (19, 'How Does the Scope Prototype Work?', 'Scope prototype means that every time we call for an instance of the Bean, Spring will create a new instance and return it. This differs from the default singleton scope, where a single object instance is instantiated once per Spring IoC container.', 2, 1, NOW(), NOW(), 1, 1),
                (20, 'How to Get ServletContext and ServletConfig Objects in a Spring Bean?', 'We can do either by implementing Spring-aware interfaces. We could also use @Autowired annotation on those beans:\n@Autowired\nServletContext servletContext;\n@Autowired\nServletConfig servletConfig;', 2, 1, NOW(), NOW(), 1, 1),
                (21, 'What Is a Controller in Spring MVC?', 'Simply put, all the requests processed by the DispatcherServlet are directed to classes annotated with @Controller. Each controller class maps one or more requests to methods that process and execute the requests with provided inputs.', 2, 1, NOW(), NOW(), 1, 1),
                (22, 'How Does the @RequestMapping Annotation Work?', 'The @RequestMapping annotation is used to map web requests to Spring Controller methods. In addition to simple use cases, we can use it for mapping of HTTP headers, binding parts of the URI with @PathVariable, and working with URI parameters and the @RequestParam annotation.', 2, 1, NOW(), NOW(), 1, 1),
                (23, 'What Is Spring JdbcTemplate Class and How to Use It?', 'The Spring JDBC template is the primary API through which we can access database operations logic that we’re interested in:\nCreation and closing of connections\nExecuting statements and stored procedure calls\nIterating over the ResultSet and returning results\nIn order to use it, we’ll need to define the simple configuration of DataSource:\n@Configuration\n@ComponentScan("org.baeldung.jdbc")\npublic class SpringJdbcConfig {\n@Bean\npublic DataSource mysqlDataSource() {\nDriverManagerDataSource dataSource = new DriverManagerDataSource();\ndataSource.setDriverClassName("com.mysql.jdbc.Driver");\ndataSource.setUrl("jdbc:mysql://localhost:3306/springjdbc");\ndataSource.setUsername("guest_user");\ndataSource.setPassword("guest_password");\nreturn dataSource;\n}\n}', 2, 1, NOW(), NOW(), 1, 1),
                (24, 'How to Enable Transactions in Spring and What Are Their Benefits?', 'There are two distinct ways to configure Transactions — with annotations or by using Aspect-Oriented Programming (AOP). The benefits include:\nConsistent programming model across different transaction APIs\nSupport for declarative transaction management\nSimpler API for programmatic transaction management\nIntegration with Spring’s data access abstractions', 2, 1, NOW(), NOW(), 1, 1),
                (25, 'What Is Spring DAO?', 'Spring Data Access Object (DAO) is Spring’s support provided to work with data access technologies like JDBC, Hibernate and JPA in a consistent and easy way.', 2, 1, NOW(), NOW(), 1, 1),
                (26, 'What Is Aspect-Oriented Programming (AOP)?', 'Aspects enable the modularization of cross-cutting concerns such as transaction management that span multiple types and objects by adding extra behavior to already existing code without modifying affected classes.', 2, 1, NOW(), NOW(), 1, 1),
                (27, 'What Are Aspect, Advice, Pointcut and JoinPoint in AOP?', 'Aspect – a class that implements cross-cutting concerns\nAdvice – the methods that get executed when a specific JoinPoint with matching Pointcut is reached in the application\nPointcut – a set of regular expressions that are matched with JoinPoint to determine whether Advice needs to be executed or not\nJoinPoint – a point during the execution of a program, such as the execution of a method or the handling of an exception', 2, 1, NOW(), NOW(), 1, 1),
                (28, 'What Is Weaving?', 'Weaving is a process that links aspects with other application types or objects to create an advised object. This can be done at compile time, load time, or runtime.', 2, 1, NOW(), NOW(), 1, 1),
                (29, 'What Is Reactive Programming?', 'Reactive programming is about non-blocking, event-driven applications that scale with a small number of threads, with back pressure being a key ingredient that aims to ensure producers don’t overwhelm consumers.', 2, 1, NOW(), NOW(), 1, 1),
                (30, 'What Is Spring WebFlux?', 'Spring WebFlux is Spring’s reactive-stack web framework, and it’s an alternative to Spring MVC.', 2, 1, NOW(), NOW(), 1, 1),
                (31, 'What Are the Mono and Flux Types?', 'The WebFlux framework in Spring Framework 5 uses Reactor as its async foundation. This project provides two core types: Mono to represent a single async value and Flux to represent a stream of async values. They both also implement the Publisher interface defined in the Reactive Streams specification.', 2, 1, NOW(), NOW(), 1, 1),
                (32, 'What Is the Use of WebClient and WebTestClient?', 'WebClient is a component in the new Web Reactive framework that can act as a reactive client for performing non-blocking HTTP requests. Since it’s reactive client, it can handle reactive streams with back pressure, and it can take full advantage of Java 8 lambdas. It can also handle both sync and async scenarios. On the other hand, the WebTestClient is a similar class that we can use in tests. Basically, it’s a thin shell around the WebClient. It can connect to any server over an HTTP connection. It can also bind directly to WebFlux applications using mock request and response objects, without the need for an HTTP server.', 2, 1, NOW(), NOW(), 1, 1),
                (33, 'What Are the Disadvantages of Using Reactive Streams?', 'There are some major disadvantages to using reactive streams:\nTroubleshooting a Reactive application is a bit difficult, so be sure to check out our tutorial on debugging reactive streams for some handy debugging tips.\nThere is limited support for reactive data stores since traditional relational data stores have yet to embrace the reactive paradigm.\nThere’s an extra learning curve when implementing.', 2, 1, NOW(), NOW(), 1, 1),
                (34, 'Is Spring 5 Compatible With Older Versions of Java?', 'In order to take advantage of Java 8 features, the Spring codebase has been revamped. This means older versions of Java cannot be used. So, the framework requires a minimum of Java 8.', 2, 1, NOW(), NOW(), 1, 1),
                (35, 'How Does Spring 5 Integrate With JDK 9 Modularity?', 'In Spring 5, everything has been modularized. This way, we won’t be forced to import jars that may not have the functionalities we’re looking for.', 2, 1, NOW(), NOW(), 1, 1),
                (36, 'Can We Use Both Web MVC and WebFlux in the Same Application?', 'As of now, Spring Boot will only allow either Spring MVC or Spring WebFlux, as Spring Boot tries to auto-configure the context depending on the dependencies that exist in its classpath. Also, Spring MVC cannot run on Netty. Moreover, MVC is a blocking paradigm and WebFlux is a non-blocking style. So, we shouldn’t be mixing both together because they serve different purposes.', 2, 1, NOW(), NOW(), 1, 1);

-- Frontend 관련 질문 (role_id = 1)
INSERT INTO interview_question (id, question, ideal_answer, role_id, interview_category_id, created_at, updated_at, created_by, updated_by) VALUES
                (37, 'Explain how the box model works in CSS.', 'The box model consists of margins, borders, padding, and the content itself.', 1, 4, NOW(), NOW(), 1, 1),
                (38, 'How do you optimize a webpage for faster rendering?', 'Optimization techniques include minification of CSS and JS files, image compression, and lazy loading.', 1, 6, NOW(), NOW(), 1, 1),
                (39, 'What is the difference between responsive and adaptive design?', 'Responsive design adjusts layout dynamically, whereas adaptive design uses predefined layouts.', 1, 9, NOW(), NOW(), 1, 1),
                (40, 'How does flexbox differ from grid layout in CSS?', 'Flexbox is a one-dimensional layout model, while grid layout is two-dimensional.', 1, 4, NOW(), NOW(), 1, 1),
                (41, 'Explain how event delegation works in JavaScript.', 'Event delegation allows you to attach a single event listener to a parent element to manage events on child elements.', 1, 5, NOW(), NOW(), 1, 1),
                (42, 'What are the benefits of using a frontend framework like Vue.js or React?', 'Frameworks provide structure, reusable components, and efficient data binding.', 1, 5, NOW(), NOW(), 1, 1),
                (43, 'How do you manage state in a Vue.js application?', 'State management in Vue.js can be handled using Vuex for centralized state management.', 1, 5, NOW(), NOW(), 1, 1),
                (44, 'What is Cross-Origin Resource Sharing (CORS) and why is it important in web development?', 'CORS is a security feature that allows or restricts resources on a web page to be requested from another domain.', 1, 7, NOW(), NOW(), 1, 1),
                (45, 'How do you ensure accessibility (a11y) in web applications?', 'By following WCAG guidelines, using semantic HTML, and providing ARIA roles.', 1, 9, NOW(), NOW(), 1, 1),
                (46, 'What are the main differences between HTML5 and previous versions?', 'HTML5 introduced new features such as semantic elements, multimedia support, and offline storage.', 1, 4, NOW(), NOW(), 1, 1);


-- Backend 관련 질문 (role_id = 2)
INSERT INTO interview_question (id, question, ideal_answer, role_id, interview_category_id, created_at, updated_at, created_by, updated_by) VALUES
                (47, 'What are the main differences between REST and GraphQL APIs?', 'REST APIs are resource-based and have fixed endpoints, while GraphQL allows clients to specify exactly what data they need.', 2, 7, NOW(), NOW(), 1, 1),
                (48, 'Explain how database indexing improves query performance.', 'Indexes allow the database to find rows more quickly by reducing the number of rows it needs to scan.', 2, 7, NOW(), NOW(), 1, 1),
                (49, 'How does a load balancer work in a backend system?', 'A load balancer distributes incoming network traffic across multiple servers to ensure no single server becomes overwhelmed.', 2, 7, NOW(), NOW(), 1, 1),
                (50, 'What is the difference between monolithic and microservices architecture?', 'Monolithic architecture is a single unified codebase, while microservices architecture breaks an application into smaller, loosely coupled services.', 2, 7, NOW(), NOW(), 1, 1),
                (51, 'How do you manage authentication and authorization in a REST API?', 'Authentication verifies identity, often with JWT tokens, while authorization ensures the user has the right permissions.', 2, 7, NOW(), NOW(), 1, 1),
                (52, 'Explain how caching improves the performance of a web application.', 'Caching stores frequently accessed data in memory, reducing the need to access slower storage repeatedly.', 2, 7, NOW(), NOW(), 1, 1),
                (53, 'What are the advantages of using NoSQL databases over relational databases?', 'NoSQL databases are more flexible, can handle unstructured data, and scale horizontally.', 2, 7, NOW(), NOW(), 1, 1),
                (54, 'What is the purpose of middleware in backend development?', 'Middleware processes requests before they reach the main application logic, handling tasks such as logging or authentication.', 2, 7, NOW(), NOW(), 1, 1),
                (55, 'How do you handle concurrency and parallelism in backend systems?', 'Concurrency allows multiple tasks to make progress independently, while parallelism runs multiple tasks simultaneously.', 2, 7, NOW(), NOW(), 1, 1),
                (56, 'What is the CAP theorem in distributed systems?', 'CAP theorem states that a distributed system can achieve only two out of three guarantees: Consistency, Availability, and Partition Tolerance.', 2, 7, NOW(), NOW(), 1, 1);

-- App Development 관련 질문 (role_id = 3)
INSERT INTO interview_question (id, question, ideal_answer, role_id, interview_category_id, created_at, updated_at, created_by, updated_by) VALUES
                (57, 'What are the differences between native and cross-platform mobile development?', 'Native development is platform-specific, while cross-platform allows you to use one codebase for multiple platforms.', 3, 8, NOW(), NOW(), 1, 1),
                (58, 'Explain how the Model-View-ViewModel (MVVM) architecture works.', 'MVVM separates the development of the graphical user interface from the business logic or back-end logic.', 3, 8, NOW(), NOW(), 1, 1),
                (59, 'How do you handle persistent data in mobile applications?', 'Persistent data can be stored using local databases like SQLite or preferences.', 3, 8, NOW(), NOW(), 1, 1),
                (60, 'What is the importance of memory management in mobile app development?', 'Efficient memory management is essential to prevent app crashes and ensure smooth performance.', 3, 8, NOW(), NOW(), 1, 1),
                (61, 'How do you implement push notifications in iOS and Android applications?', 'Push notifications can be implemented using Firebase Cloud Messaging (FCM) for Android and Apple Push Notification Service (APNS) for iOS.', 3, 8, NOW(), NOW(), 1, 1),
                (62, 'Explain the process of handling app lifecycle events in mobile development.', 'Lifecycle events allow the app to respond to state changes like launching, pausing, or resuming.', 3, 8, NOW(), NOW(), 1, 1),
                (63, 'What are the best practices for improving app performance?', 'Performance can be improved by optimizing layout hierarchies, reducing overdraw, and managing memory effectively.', 3, 8, NOW(), NOW(), 1, 1),
                (64, 'How do you ensure your app is secure against common threats like data leaks or unauthorized access?', 'Security can be enhanced by using encryption, secure storage, and ensuring proper authentication and authorization.', 3, 8, NOW(), NOW(), 1, 1),
                (65, 'What are the pros and cons of using Flutter for mobile app development?', 'Flutter offers a single codebase for both iOS and Android, but it may result in larger app sizes.', 3, 8, NOW(), NOW(), 1, 1),
                (66, 'How do you implement offline functionality in a mobile app?', 'Offline functionality can be implemented using local databases and background synchronization when the network is available.', 3, 8, NOW(), NOW(), 1, 1);


-- UI/UX Design 관련 질문 (role_id = 4)
INSERT INTO interview_question (id, question, ideal_answer, role_id, interview_category_id, created_at, updated_at, created_by, updated_by) VALUES
                (67, 'What is the difference between UX design and UI design?', 'UX design focuses on the overall experience of the user, while UI design deals with the look and feel of the product interface.', 4, 9, NOW(), NOW(), 1, 1),
                (68, 'How do you conduct user research for a new product?', 'User research is conducted through methods such as interviews, surveys, and usability testing.', 4, 9, NOW(), NOW(), 1, 1),
                (69, 'Explain the importance of wireframing in the design process.', 'Wireframing allows designers to create a basic structure of a website or app before adding visual design elements.', 4, 9, NOW(), NOW(), 1, 1),
                (70, 'What are the key principles of visual hierarchy in UI design?', 'Visual hierarchy is achieved through size, color, contrast, alignment, and spacing to guide the user''s attention.', 4, 9, NOW(), NOW(), 1, 1),
                (71, 'How do you ensure that your designs are accessible to users with disabilities?', 'By using color contrast, keyboard navigation, and screen reader support, designs can be made accessible.', 4, 9, NOW(), NOW(), 1, 1),
                (72, 'How do you approach designing for different screen sizes and devices?', 'Responsive design ensures that the interface adapts to various screen sizes by using fluid grids and flexible images.', 4, 9, NOW(), NOW(), 1, 1),
                (73, 'What is the significance of usability testing in the design process?', 'Usability testing helps identify potential issues in the design and ensures that the product meets user needs.', 4, 9, NOW(), NOW(), 1, 1),
                (74, 'How do you balance aesthetics and functionality in your designs?', 'By focusing on user goals and ensuring that design elements are both visually appealing and functional.', 4, 9, NOW(), NOW(), 1, 1),
                (75, 'What is the importance of creating personas in the UX design process?', 'Personas represent user types, helping guide design decisions based on real-world behavior and needs.', 4, 9, NOW(), NOW(), 1, 1),
                (76, 'How do you integrate feedback from users into your design iterations?', 'By regularly gathering and analyzing user feedback, then incorporating it into design improvements.', 4, 9, NOW(), NOW(), 1, 1);

-- Graphic Design 관련 질문 (role_id = 5)
INSERT INTO interview_question (id, question, ideal_answer, role_id, interview_category_id, created_at, updated_at, created_by, updated_by) VALUES
                (77, 'What is the difference between vector and raster graphics?', 'Vector graphics are made of paths, while raster graphics are made of pixels.', 5, 10, NOW(), NOW(), 1, 1),
                (78, 'How do you approach color theory in your designs?', 'Color theory helps guide the choices of colors that work well together and convey the desired mood or message.', 5, 10, NOW(), NOW(), 1, 1),
                (79, 'What are the key elements of a well-balanced layout in graphic design?', 'A well-balanced layout includes visual hierarchy, alignment, and consistent spacing.', 5, 10, NOW(), NOW(), 1, 1),
                (80, 'How do you use typography to enhance the readability of a design?', 'Choosing appropriate fonts, sizes, and line heights can greatly improve readability.', 5, 10, NOW(), NOW(), 1, 1),
                (81, 'What is the skill of branding in graphic design?', 'Branding creates a cohesive image and identity for a business through consistent use of logos, colors, and design styles.', 5, 10, NOW(), NOW(), 1, 1),
                (82, 'Explain the process of designing a logo from concept to final product.', 'Logo design involves brainstorming, sketching, refinement, and finalizing the design in vector format.', 5, 10, NOW(), NOW(), 1, 1),
                (83, 'How do you ensure consistency across different design assets?', 'By using style guides, templates, and consistent use of typography, color, and spacing.', 5, 10, NOW(), NOW(), 1, 1),
                (84, 'How do you handle revisions and feedback from clients in the design process?', 'Through clear communication and understanding the client''s goals while maintaining the integrity of the design.', 5, 10, NOW(), NOW(), 1, 1),
                (85, 'What is the importance of using grids in your design workflow?', 'Grids help to create structure and alignment, making the design more cohesive and easier to navigate.', 5, 10, NOW(), NOW(), 1, 1),
                (86, 'How do you optimize images for both print and web formats?', 'For print, images should be high resolution (300dpi), while for the web, images should be compressed and optimized for faster loading.', 5, 10, NOW(), NOW(), 1, 1);

-- Project Management 관련 질문 (role_id = 6)
INSERT INTO interview_question (id, question, ideal_answer, role_id, interview_category_id, created_at, updated_at, created_by, updated_by) VALUES
                (87, 'How do you prioritize tasks in a project with tight deadlines?', 'Prioritization is done based on urgency, impact, and resource availability, often using methods like MoSCoW or Eisenhower Matrix.', 6, 11, NOW(), NOW(), 1, 1),
                (88, 'Explain the differences between Agile and Waterfall methodologies.', 'Agile is iterative and flexible, while Waterfall is linear and sequential.', 6, 11, NOW(), NOW(), 1, 1),
                (89, 'How do you handle scope creep in a project?', 'Scope creep can be managed through clear documentation, change control processes, and constant communication with stakeholders.', 6, 11, NOW(), NOW(), 1, 1),
                (90, 'What is the significance of risk management in project planning?', 'Risk management helps identify potential issues early, allowing for proactive mitigation strategies.', 6, 11, NOW(), NOW(), 1, 1),
                (91, 'How do you ensure effective communication among team members?', 'Effective communication is achieved through regular meetings, clear documentation, and using collaboration tools.', 6, 11, NOW(), NOW(), 1, 1),
                (92, 'What tools do you use for tracking project progress and milestones?', 'Tools like Jira, Trello, and Microsoft Project help in tracking progress and ensuring milestones are met.', 6, 11, NOW(), NOW(), 1, 1),
                (93, 'How do you manage resources when they are limited or over-allocated?', 'By reallocating tasks, prioritizing essential work, and potentially bringing in additional resources if necessary.', 6, 11, NOW(), NOW(), 1, 1),
                (94, 'How do you handle conflicts within the project team?', 'Conflicts can be resolved through mediation, open communication, and focusing on common project goals.', 6, 11, NOW(), NOW(), 1, 1),
                (95, 'What is the importance of stakeholder management in project success?', 'Stakeholder management ensures that expectations are met, and their input is considered throughout the project.', 6, 11, NOW(), NOW(), 1, 1),
                (96, 'How do you ensure that the project stays within budget?', 'Budget adherence is achieved through careful tracking of expenses, resource management, and adjusting the scope as necessary.', 6, 11, NOW(), NOW(), 1, 1);

-- Video Editing 관련 질문 (role_id = 7)
INSERT INTO interview_question (id, question, ideal_answer, role_id, interview_category_id, created_at, updated_at, created_by, updated_by) VALUES
                (97, 'What are the key differences between linear and non-linear editing?', 'Linear editing is sequential, while non-linear allows for edits at any point in the project timeline.', 7, 12, NOW(), NOW(), 1, 1),
                (98, 'How do you ensure color consistency across different clips in a video?', 'Color grading and correction tools help ensure consistent color across all clips.', 7, 12, NOW(), NOW(), 1, 1),
                (99, 'What is the importance of pacing in video editing?', 'Pacing affects the flow of the video and can enhance the emotional impact of the story.', 7, 12, NOW(), NOW(), 1, 1),
                (100, 'Explain the concept of the J-cut and L-cut in video editing.', 'J-cuts allow audio to start before the video, while L-cuts extend the audio beyond the end of the video.', 7, 12, NOW(), NOW(), 1, 1),
                (101, 'How do you organize your media assets for a large project?', 'Media assets are organized using folders, bins, and metadata to ensure easy access and efficient workflow.', 7, 12, NOW(), NOW(), 1, 1),
                (102, 'What are the best practices for adding effects and transitions to a video?', 'Effects and transitions should be subtle and serve the story, rather than distract from it.', 7, 12, NOW(), NOW(), 1, 1),
                (103, 'How do you handle synchronization of audio and video tracks?', 'Synchronization is achieved by aligning audio waveforms or using timecode and syncing tools.', 7, 12, NOW(), NOW(), 1, 1),
                (104, 'What is the significance of the rule of thirds in video composition?', 'The rule of thirds creates visually appealing compositions by dividing the frame into nine equal parts.', 7, 12, NOW(), NOW(), 1, 1),
                (105, 'How do you optimize videos for different platforms (e.g., YouTube, Instagram)?', 'Optimization involves using the correct aspect ratio, resolution, and compression settings for each platform.', 7, 12, NOW(), NOW(), 1, 1),
                (106, 'What software do you prefer for video editing, and why?', 'Preferred software depends on the project needs; Adobe Premiere Pro and Final Cut Pro are popular choices for their advanced features and workflow efficiency.', 7, 12, NOW(), NOW(), 1, 1);
