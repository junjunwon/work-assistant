INSERT INTO job (id, title, created_at, updated_at, created_by, updated_by) VALUES (1, '디자인', NOW(), NOW(), 1, 1);
INSERT INTO job (id, title, created_at, updated_at, created_by, updated_by) VALUES (2, '개발', NOW(), NOW(), 1, 1);
INSERT INTO job (id, title, created_at, updated_at, created_by, updated_by) VALUES (3, '기획', NOW(), NOW(), 1, 1);
INSERT INTO job (id, title, created_at, updated_at, created_by, updated_by) VALUES (4, '영상 편집', NOW(), NOW(), 1, 1);

-- 역할 데이터 삽입
INSERT INTO role (id, title, job_id, created_at, updated_at, created_by, updated_by) VALUES (1, '프론트엔드', 2, NOW(), NOW(), 1, 1);
INSERT INTO role (id, title, job_id, created_at, updated_at, created_by, updated_by) VALUES (2, '백엔드', 2, NOW(), NOW(), 1, 1);
INSERT INTO role (id, title, job_id, created_at, updated_at, created_by, updated_by) VALUES (3, '앱 개발', 2, NOW(), NOW(), 1, 1);
INSERT INTO role (id, title, job_id, created_at, updated_at, created_by, updated_by) VALUES (4, 'UI/UX 디자인', 1, NOW(), NOW(), 1, 1);
INSERT INTO role (id, title, job_id, created_at, updated_at, created_by, updated_by) VALUES (5, '그래픽 디자인', 1, NOW(), NOW(), 1, 1);
INSERT INTO role (id, title, job_id, created_at, updated_at, created_by, updated_by) VALUES (6, '프로젝트 관리', 3, NOW(), NOW(), 1, 1);
INSERT INTO role (id, title, job_id, created_at, updated_at, created_by, updated_by) VALUES (7, '영상 편집', 4, NOW(), NOW(), 1, 1);

-- 새로운 카테고리 추가
INSERT INTO interview_category (id, name) VALUES
                                              (1, '스프링'),
                                              (2, '네트워크'),
                                              (3, '자바'),
                                              (4, 'HTML/CSS'),
                                              (5, '자바스크립트'),
                                              (6, '성능 최적화'),
                                              (7, '시스템 설계'),
                                              (8, '모바일 개발'),
                                              (9, 'UI/UX 원칙'),
                                              (10, '그래픽 디자인 기본'),
                                              (11, '프로젝트 관리'),
                                              (12, '영상 편집 기술');

-- 면접 질문 데이터 삽입
INSERT INTO interview_question (id, question, ideal_answer, role_id, interview_category_id, created_at, updated_at, created_by, updated_by) VALUES
                                                                                                                                                (1, 'HTTP GET과 POST 메서드의 차이를 설명하세요.', 'GET은 지정된 리소스로부터 데이터를 요청하는 데 사용됩니다. POST는 데이터를 지정된 리소스로 제출하여 처리하는 데 사용됩니다.', 2, 2, NOW(), NOW(), 1, 1),
                                                                                                                                                (2, '스프링 프레임워크란 무엇인가요?', '스프링은 자바 엔터프라이즈 애플리케이션 개발을 위한 가장 널리 사용되는 프레임워크입니다. 핵심 기능은 모든 자바 애플리케이션 개발에 사용될 수 있으며, Jakarta EE 플랫폼 위에 다양한 웹 애플리케이션을 구축할 수 있습니다.', 2, 1, NOW(), NOW(), 1, 1),
                                                                                                                                                (3, '스프링을 사용하는 이점은 무엇인가요?', '스프링은 Jakarta EE 개발을 쉽게 하기 위해 만들어졌습니다. 주요 이점으로는 경량성, 의존성 주입, 관점 지향 프로그래밍(AOP), IoC 컨테이너 관리, MVC 프레임워크, 트랜잭션 관리, 예외 처리 등이 있습니다.', 2, 1, NOW(), NOW(), 1, 1),
                                                                                                                                                (4, '스프링의 하위 프로젝트는 무엇이 있으며, 간단히 설명해주세요.', '핵심 모듈(Core), JDBC 통합, ORM 통합, 웹 통합 모듈, MVC 프레임워크, AOP 모듈이 있습니다.', 2, 1, NOW(), NOW(), 1, 1),
                                                                                                                                                (5, '의존성 주입이란 무엇인가요?', '의존성 주입은 IoC의 한 개념으로, 객체를 수동으로 생성하지 않고 IoC 컨테이너가 필요할 때 객체를 생성하도록 설명하는 것입니다.', 2, 1, NOW(), NOW(), 1, 1),
                                                                                                                                                (6, '스프링에서 빈을 주입하는 방법은 무엇인가요?', '빈 주입 방법으로는 셋터 주입, 생성자 주입, 필드 주입이 있습니다. 설정은 XML 파일이나 어노테이션을 통해 할 수 있습니다.', 2, 1, NOW(), NOW(), 1, 1),
                                                                                                                                                (7, '빈을 주입하는 가장 좋은 방법은 무엇인가요? 왜 그런가요?', '필수 의존성은 생성자 주입을 사용하고, 선택적 의존성은 셋터를 사용하는 것이 권장됩니다. 생성자 주입은 불변 필드에 값을 주입할 수 있어 테스트를 용이하게 합니다.', 2, 1, NOW(), NOW(), 1, 1),
                                                                                                                                                (8, 'BeanFactory와 ApplicationContext의 차이는 무엇인가요?', 'BeanFactory는 객체 인스턴스를 제공하고 관리하는 컨테이너를 나타내는 인터페이스이며, ApplicationContext는 추가로 메타데이터 및 애플리케이션의 모든 정보를 포함하는 인터페이스입니다.', 2, 1, NOW(), NOW(), 1, 1),
                                                                                                                                                (9, '스프링 빈이란 무엇인가요?', '스프링 빈은 스프링 IoC 컨테이너에서 초기화된 자바 객체입니다.', 2, 1, NOW(), NOW(), 1, 1),
                                                                                                                                                (10, '스프링 프레임워크에서 기본 빈 스코프는 무엇인가요?', '기본적으로 스프링 빈은 싱글톤으로 초기화됩니다.', 2, 1, NOW(), NOW(), 1, 1),
                                                                                                                                                (11, '빈의 스코프를 어떻게 정의할 수 있나요?', '@Scope 어노테이션이나 XML 설정 파일의 "scope" 속성을 사용하여 빈의 스코프를 정의할 수 있습니다.', 2, 1, NOW(), NOW(), 1, 1),
                                                                                                                                                (12, '싱글톤 빈은 스레드 안전한가요?', '아니요, 싱글톤 빈은 스레드 안전하지 않습니다. 스레드 안전성은 실행과 관련이 있으며, 싱글톤은 객체 생성을 관리하는 디자인 패턴이기 때문입니다.', 2, 1, NOW(), NOW(), 1, 1),
                                                                                                                                                (13, '스프링 빈의 생명 주기는 어떻게 되나요?', '스프링 빈은 자바 또는 XML 정의를 기반으로 인스턴스화됩니다. 초기화 후에는 더 이상 필요하지 않을 때 IoC 컨테이너에서 제거됩니다.', 2, 1, NOW(), NOW(), 1, 1),
                                                                                                                                                (14, '스프링 자바 기반 설정이란 무엇인가요?', '스프링 애플리케이션을 타입 안전하게 구성하는 방법 중 하나로, XML 기반 설정의 대안입니다.', 2, 1, NOW(), NOW(), 1, 1),
                                                                                                                                                (15, '하나의 프로젝트에 여러 스프링 설정 파일을 사용할 수 있나요?', '예, 대규모 프로젝트에서는 유지보수성과 모듈성을 높이기 위해 여러 스프링 설정 파일을 사용하는 것이 권장됩니다.', 2, 1, NOW(), NOW(), 1, 1),
                                                                                                                                                (16, '스프링 시큐리티란 무엇인가요?', '스프링 시큐리티는 스프링 프레임워크의 별도 모듈로, 자바 애플리케이션에서 인증 및 권한 부여 방법을 제공합니다.', 2, 1, NOW(), NOW(), 1, 1),
                                                                                                                                                (17, '스프링 부트란 무엇인가요?', '스프링 부트는 최소한의 코드로 스프링 애플리케이션을 빠르게 시작할 수 있도록 미리 구성된 프레임워크 모음을 제공합니다.', 2, 1, NOW(), NOW(), 1, 1),
                                                                                                                                                (18, '스프링 프레임워크에서 사용되는 디자인 패턴을 몇 가지 설명하세요.', '싱글톤 패턴, 팩토리 패턴, 프로토타입 패턴, 어댑터 패턴, 프록시 패턴, 템플릿 메소드 패턴 등이 있습니다.', 2, 1, NOW(), NOW(), 1, 1),
                                                                                                                                                (19, '프로토타입 스코프는 어떻게 작동하나요?', '프로토타입 스코프는 빈의 인스턴스가 요청될 때마다 새로운 인스턴스를 생성하여 반환합니다. 이는 단일 인스턴스가 생성되는 싱글톤 스코프와 다릅니다.', 2, 1, NOW(), NOW(), 1, 1),
                                                                                                                                                (20, '스프링 빈에서 ServletContext와 ServletConfig 객체를 어떻게 얻을 수 있나요?', '@Autowired 어노테이션을 사용하거나, 스프링 인식 인터페이스를 구현하여 얻을 수 있습니다.', 2, 1, NOW(), NOW(), 1, 1),
                                                                                                                                                (21, '스프링 MVC에서 컨트롤러란 무엇인가요?', 'DispatcherServlet에 의해 처리되는 모든 요청은 @Controller로 주석이 달린 클래스에 전달됩니다. 각 컨트롤러 클래스는 요청을 처리하는 메서드를 가지고 있으며, 제공된 입력으로 요청을 처리합니다.', 2, 1, NOW(), NOW(), 1, 1),
                                                                                                                                                (22, '@RequestMapping 어노테이션은 어떻게 작동하나요?', '@RequestMapping 어노테이션은 웹 요청을 스프링 컨트롤러 메서드에 매핑하는 데 사용됩니다. HTTP 헤더 매핑, @PathVariable로 URI 부분 바인딩, @RequestParam 어노테이션을 사용하여 URI 매개변수 작업에 사용할 수 있습니다.', 2, 1, NOW(), NOW(), 1, 1),
                                                                                                                                                (23, '스프링 JdbcTemplate 클래스와 그것을 사용하는 방법은 무엇인가요?', '스프링 JDBC 템플릿은 연결 생성 및 닫기, 명령문 및 저장 프로시저 호출 실행, 결과 반복 및 반환 등의 데이터베이스 작업을 수행하는 기본 API입니다.', 2, 1, NOW(), NOW(), 1, 1),
                                                                                                                                                (24, '스프링에서 트랜잭션을 활성화하는 방법과 그 이점은 무엇인가요?', '트랜잭션을 구성하는 방법에는 어노테이션을 사용하는 것과 AOP를 사용하는 두 가지 방법이 있습니다. 일관된 프로그래밍 모델, 선언적 트랜잭션 관리 지원, 트랜잭션 관리를 쉽게 해주는 API 제공 등의 이점이 있습니다.', 2, 1, NOW(), NOW(), 1, 1),
                                                                                                                                                (25, '스프링 DAO란 무엇인가요?', '스프링 데이터 액세스 오브젝트(DAO)는 JDBC, 하이버네이트, JPA와 같은 데이터 액세스 기술을 쉽게 사용할 수 있도록 지원하는 스프링의 기능입니다.', 2, 1, NOW(), NOW(), 1, 1),
                                                                                                                                                (26, '관점 지향 프로그래밍(AOP)이란 무엇인가요?', 'AOP는 트랜잭션 관리와 같은 여러 클래스와 객체에 걸쳐 있는 관심사를 모듈화하여 기존 코드를 수정하지 않고 추가적인 동작을 부여할 수 있는 프로그래밍 방식입니다.', 2, 1, NOW(), NOW(), 1, 1),
                                                                                                                                                (27, 'AOP에서 Aspect, Advice, Pointcut, JoinPoint는 무엇인가요?', 'Aspect는 교차 관심사를 구현하는 클래스입니다. Advice는 특정 JoinPoint에서 실행되는 메서드입니다. Pointcut은 JoinPoint와 일치하는 정규 표현식 세트로, Advice가 실행될지 여부를 결정합니다. JoinPoint는 프로그램 실행 중의 한 지점입니다.', 2, 1, NOW(), NOW(), 1, 1),
                                                                                                                                                (28, '위빙(Weaving)이란 무엇인가요?', '위빙은 애플리케이션의 다른 유형이나 객체와 Aspect를 연결하여 권장 객체를 생성하는 프로세스입니다. 이는 컴파일 시간, 로드 시간 또는 런타임에 수행될 수 있습니다.', 2, 1, NOW(), NOW(), 1, 1),
                                                                                                                                                (29, '반응형 프로그래밍(리액티브 프로그래밍)이란 무엇인가요?', '리액티브 프로그래밍은 비동기 이벤트 기반 애플리케이션을 만드는 것으로, 소수의 스레드로도 확장 가능하며, 생산자가 소비자를 압도하지 않도록 백프레셔(back pressure)라는 개념이 사용됩니다.', 2, 1, NOW(), NOW(), 1, 1),
                                                                                                                                                (30, '스프링 WebFlux란 무엇인가요?', '스프링 WebFlux는 스프링의 반응형 웹 프레임워크로, 스프링 MVC의 대안입니다.', 2, 1, NOW(), NOW(), 1, 1),
                                                                                                                                                (31, 'Mono와 Flux 타입은 무엇인가요?', 'WebFlux 프레임워크는 비동기 스트림을 처리하기 위해 Reactor를 사용합니다. Mono는 단일 비동기 값을 나타내고, Flux는 비동기 값의 스트림을 나타냅니다.', 2, 1, NOW(), NOW(), 1, 1),
                                                                                                                                                (32, 'WebClient와 WebTestClient의 용도는 무엇인가요?', 'WebClient는 비동기 HTTP 요청을 수행하는 반응형 클라이언트입니다. WebTestClient는 테스트에서 사용되는 유사한 클래스입니다.', 2, 1, NOW(), NOW(), 1, 1),
                                                                                                                                                (33, '리액티브 스트림을 사용하는 단점은 무엇인가요?', '리액티브 애플리케이션의 문제 해결이 어려우며, 리액티브 데이터 저장소의 제한적인 지원과 추가적인 학습 곡선이 필요합니다.', 2, 1, NOW(), NOW(), 1, 1),
                                                                                                                                                (34, '스프링 5가 이전 버전의 자바와 호환되나요?', '스프링 5는 자바 8의 기능을 활용하기 위해 코드베이스가 변경되었습니다. 따라서 최소 자바 8 이상이 필요합니다.', 2, 1, NOW(), NOW(), 1, 1),
                                                                                                                                                (35, '스프링 5는 JDK 9 모듈성과 어떻게 통합되나요?', '스프링 5는 모든 기능이 모듈화되었습니다. 따라서 원하지 않는 기능이 포함된 JAR 파일을 가져올 필요가 없습니다.', 2, 1, NOW(), NOW(), 1, 1),
                                                                                                                                                (36, '웹 MVC와 WebFlux를 동일한 애플리케이션에서 사용할 수 있나요?', '현재로서는 Spring Boot는 Spring MVC 또는 Spring WebFlux 중 하나만 허용합니다. MVC는 차단형 패러다임이고 WebFlux는 비차단형 스타일이기 때문에 둘을 섞어서는 안 됩니다.', 2, 1, NOW(), NOW(), 1, 1);

-- 프론트엔드 관련 질문 (role_id = 1)
INSERT INTO interview_question (id, question, ideal_answer, role_id, interview_category_id, created_at, updated_at, created_by, updated_by) VALUES
                                                                                                                                                (37, 'CSS의 박스 모델이 어떻게 작동하는지 설명하세요.', '박스 모델은 마진, 테두리, 패딩, 그리고 콘텐츠로 구성됩니다.', 1, 4, NOW(), NOW(), 1, 1),
                                                                                                                                                (38, '웹페이지의 렌더링 속도를 최적화하는 방법은 무엇인가요?', '최적화 기법으로는 CSS와 JS 파일의 미니파이(minification), 이미지 압축, 지연 로딩 등이 있습니다.', 1, 6, NOW(), NOW(), 1, 1),
                                                                                                                                                (39, '반응형 디자인과 적응형 디자인의 차이점은 무엇인가요?', '반응형 디자인은 레이아웃이 동적으로 조정되는 반면, 적응형 디자인은 미리 정의된 레이아웃을 사용합니다.', 1, 9, NOW(), NOW(), 1, 1),
                                                                                                                                                (40, 'CSS의 플렉스박스와 그리드 레이아웃의 차이점은 무엇인가요?', '플렉스박스는 1차원 레이아웃 모델이고, 그리드 레이아웃은 2차원 레이아웃 모델입니다.', 1, 4, NOW(), NOW(), 1, 1),
                                                                                                                                                (41, '자바스크립트에서 이벤트 위임이 어떻게 작동하는지 설명하세요.', '이벤트 위임은 하나의 이벤트 리스너를 부모 요소에 부착하여 자식 요소의 이벤트를 처리할 수 있도록 합니다.', 1, 5, NOW(), NOW(), 1, 1),
                                                                                                                                                (42, 'Vue.js나 React와 같은 프론트엔드 프레임워크를 사용하는 이점은 무엇인가요?', '프레임워크는 구조, 재사용 가능한 컴포넌트, 효율적인 데이터 바인딩을 제공합니다.', 1, 5, NOW(), NOW(), 1, 1),
                                                                                                                                                (43, 'Vue.js 애플리케이션에서 상태 관리를 어떻게 관리하나요?', 'Vue.js에서는 Vuex를 사용하여 중앙 집중식 상태 관리를 할 수 있습니다.', 1, 5, NOW(), NOW(), 1, 1),
                                                                                                                                                (44, 'CORS(교차 출처 리소스 공유)란 무엇이며, 웹 개발에서 왜 중요한가요?', 'CORS는 웹 페이지에서 다른 도메인의 리소스를 요청할 수 있는지 여부를 제어하는 보안 기능입니다.', 1, 7, NOW(), NOW(), 1, 1),
                                                                                                                                                (45, '웹 애플리케이션의 접근성(a11y)을 어떻게 보장하나요?', 'WCAG 지침을 따르고, 시맨틱 HTML을 사용하며, ARIA 역할을 제공함으로써 접근성을 보장할 수 있습니다.', 1, 9, NOW(), NOW(), 1, 1),
                                                                                                                                                (46, 'HTML5와 이전 버전 간의 주요 차이점은 무엇인가요?', 'HTML5는 시맨틱 요소, 멀티미디어 지원, 오프라인 저장소와 같은 새로운 기능을 도입했습니다.', 1, 4, NOW(), NOW(), 1, 1);

-- 백엔드 관련 질문 (role_id = 2)
INSERT INTO interview_question (id, question, ideal_answer, role_id, interview_category_id, created_at, updated_at, created_by, updated_by) VALUES
                                                                                                                                                (47, 'REST와 GraphQL API의 주요 차이점은 무엇인가요?', 'REST API는 리소스 기반이며 고정된 엔드포인트를 가지는 반면, GraphQL은 클라이언트가 필요한 데이터를 명확하게 요청할 수 있도록 합니다.', 2, 7, NOW(), NOW(), 1, 1),
                                                                                                                                                (48, '데이터베이스 인덱싱이 쿼리 성능을 어떻게 향상시키나요?', '인덱스는 데이터베이스가 검색할 행의 수를 줄여 더 빠르게 행을 찾을 수 있게 합니다.', 2, 7, NOW(), NOW(), 1, 1),
                                                                                                                                                (49, '백엔드 시스템에서 로드 밸런서가 어떻게 작동하나요?', '로드 밸런서는 들어오는 네트워크 트래픽을 여러 서버에 분배하여 단일 서버가 과부하되지 않도록 합니다.', 2, 7, NOW(), NOW(), 1, 1),
                                                                                                                                                (50, '모놀리식 아키텍처와 마이크로서비스 아키텍처의 차이점은 무엇인가요?', '모놀리식 아키텍처는 하나의 통합된 코드베이스인 반면, 마이크로서비스 아키텍처는 애플리케이션을 더 작고 느슨하게 결합된 서비스로 분리합니다.', 2, 7, NOW(), NOW(), 1, 1),
                                                                                                                                                (51, 'REST API에서 인증 및 권한 관리를 어떻게 처리하나요?', '인증은 신원을 확인하고, 권한은 사용자가 올바른 권한을 가지고 있는지 확인하는 과정입니다. JWT 토큰을 사용하는 것이 일반적입니다.', 2, 7, NOW(), NOW(), 1, 1),
                                                                                                                                                (52, '캐싱이 웹 애플리케이션 성능을 어떻게 향상시키나요?', '캐싱은 자주 액세스되는 데이터를 메모리에 저장하여 느린 스토리지에 반복적으로 액세스할 필요를 줄입니다.', 2, 7, NOW(), NOW(), 1, 1),
                                                                                                                                                (53, 'NoSQL 데이터베이스가 관계형 데이터베이스에 비해 가지는 장점은 무엇인가요?', 'NoSQL 데이터베이스는 더 유연하고, 비정형 데이터를 처리할 수 있으며, 수평적 확장이 가능합니다.', 2, 7, NOW(), NOW(), 1, 1),
                                                                                                                                                (54, '백엔드 개발에서 미들웨어의 목적은 무엇인가요?', '미들웨어는 로깅이나 인증과 같은 작업을 처리하며, 주 애플리케이션 로직 전에 요청을 처리합니다.', 2, 7, NOW(), NOW(), 1, 1),
                                                                                                                                                (55, '백엔드 시스템에서 동시성과 병렬성을 어떻게 처리하나요?', '동시성은 여러 작업이 독립적으로 진행될 수 있도록 하고, 병렬성은 여러 작업을 동시에 실행합니다.', 2, 7, NOW(), NOW(), 1, 1),
                                                                                                                                                (56, '분산 시스템에서 CAP 정리는 무엇인가요?', 'CAP 정리는 분산 시스템이 일관성, 가용성, 파티션 내성을 모두 충족할 수 없다는 이론입니다.', 2, 7, NOW(), NOW(), 1, 1);

-- 앱 개발 관련 질문 (role_id = 3)
INSERT INTO interview_question (id, question, ideal_answer, role_id, interview_category_id, created_at, updated_at, created_by, updated_by) VALUES
                                                                                                                                                (57, '네이티브와 크로스 플랫폼 모바일 개발의 차이점은 무엇인가요?', '네이티브 개발은 플랫폼별로 개발되며, 크로스 플랫폼은 하나의 코드베이스를 사용하여 여러 플랫폼을 지원할 수 있습니다.', 3, 8, NOW(), NOW(), 1, 1),
                                                                                                                                                (58, '모델-뷰-뷰모델(MVVM) 아키텍처가 어떻게 작동하는지 설명하세요.', 'MVVM은 사용자 인터페이스 개발을 비즈니스 로직이나 백엔드 로직과 분리합니다.', 3, 8, NOW(), NOW(), 1, 1),
                                                                                                                                                (59, '모바일 애플리케이션에서 영구 데이터를 어떻게 처리하나요?', '영구 데이터는 SQLite 또는 Preferences와 같은 로컬 데이터베이스를 사용하여 저장할 수 있습니다.', 3, 8, NOW(), NOW(), 1, 1),
                                                                                                                                                (60, '모바일 앱 개발에서 메모리 관리의 중요성은 무엇인가요?', '효율적인 메모리 관리는 앱이 충돌하지 않고 원활하게 작동하기 위해 필수적입니다.', 3, 8, NOW(), NOW(), 1, 1),
                                                                                                                                                (61, 'iOS와 Android 애플리케이션에서 푸시 알림을 어떻게 구현하나요?', '푸시 알림은 Android에서 Firebase Cloud Messaging(FCM)을 사용하고, iOS에서는 Apple Push Notification Service(APNS)를 사용하여 구현할 수 있습니다.', 3, 8, NOW(), NOW(), 1, 1),
                                                                                                                                                (62, '모바일 개발에서 앱 생명주기 이벤트를 처리하는 방법은 무엇인가요?', '생명주기 이벤트는 앱이 실행, 일시 중지, 다시 시작 등의 상태 변화에 응답할 수 있도록 합니다.', 3, 8, NOW(), NOW(), 1, 1),
                                                                                                                                                (63, '앱 성능을 개선하기 위한 모범 사례는 무엇인가요?', '레이아웃 계층 구조 최적화, 오버드로우 감소, 효율적인 메모리 관리를 통해 성능을 개선할 수 있습니다.', 3, 8, NOW(), NOW(), 1, 1),
                                                                                                                                                (64, '데이터 유출이나 무단 액세스와 같은 일반적인 위협으로부터 앱을 어떻게 보호하나요?', '암호화, 안전한 저장소 사용, 적절한 인증 및 권한 관리를 통해 보안을 강화할 수 있습니다.', 3, 8, NOW(), NOW(), 1, 1),
                                                                                                                                                (65, '모바일 앱 개발에서 Flutter를 사용하는 장단점은 무엇인가요?', 'Flutter는 하나의 코드베이스로 iOS와 Android 모두를 지원할 수 있지만, 더 큰 앱 크기를 초래할 수 있습니다.', 3, 8, NOW(), NOW(), 1, 1),
                                                                                                                                                (66, '모바일 앱에서 오프라인 기능을 어떻게 구현하나요?', '오프라인 기능은 로컬 데이터베이스를 사용하고 네트워크가 사용할 수 있을 때 백그라운드 동기화를 통해 구현할 수 있습니다.', 3, 8, NOW(), NOW(), 1, 1);


-- UI/UX 디자인 관련 질문 (role_id = 4)
INSERT INTO interview_question (id, question, ideal_answer, role_id, interview_category_id, created_at, updated_at, created_by, updated_by) VALUES
                                                                                                                                                (67, 'UX 디자인과 UI 디자인의 차이점은 무엇인가요?', 'UX 디자인은 사용자 경험에 중점을 두고, UI 디자인은 제품 인터페이스의 외관과 느낌을 다룹니다.', 4, 9, NOW(), NOW(), 1, 1),
                                                                                                                                                (68, '새로운 제품에 대한 사용자 조사를 어떻게 진행하나요?', '사용자 조사는 인터뷰, 설문 조사, 사용성 테스트 등의 방법을 통해 진행됩니다.', 4, 9, NOW(), NOW(), 1, 1),
                                                                                                                                                (69, '디자인 프로세스에서 와이어프레임의 중요성은 무엇인가요?', '와이어프레임은 시각적 디자인 요소를 추가하기 전에 웹사이트나 앱의 기본 구조를 만드는 데 도움이 됩니다.', 4, 9, NOW(), NOW(), 1, 1),
                                                                                                                                                (70, 'UI 디자인에서 시각적 계층 구조의 주요 원칙은 무엇인가요?', '시각적 계층 구조는 크기, 색상, 대비, 정렬 및 간격을 통해 사용자의 주의를 유도합니다.', 4, 9, NOW(), NOW(), 1, 1),
                                                                                                                                                (71, '장애가 있는 사용자가 접근할 수 있도록 디자인을 어떻게 보장하나요?', '색상 대비, 키보드 탐색 및 화면 낭독기 지원을 통해 접근성을 보장할 수 있습니다.', 4, 9, NOW(), NOW(), 1, 1),
                                                                                                                                                (72, '다양한 화면 크기와 장치에 맞춰 디자인하는 접근 방식은 무엇인가요?', '반응형 디자인은 유동적인 그리드와 유연한 이미지를 사용하여 다양한 화면 크기에 맞춰 인터페이스가 적응할 수 있도록 합니다.', 4, 9, NOW(), NOW(), 1, 1),
                                                                                                                                                (73, '디자인 프로세스에서 사용성 테스트의 중요성은 무엇인가요?', '사용성 테스트는 디자인에서 잠재적인 문제를 식별하고, 제품이 사용자의 요구를 충족하는지 확인하는 데 도움이 됩니다.', 4, 9, NOW(), NOW(), 1, 1),
                                                                                                                                                (74, '디자인에서 미학과 기능의 균형을 어떻게 맞추나요?', '사용자의 목표에 중점을 두고, 디자인 요소가 시각적으로 매력적이면서도 기능적으로 유지되도록 합니다.', 4, 9, NOW(), NOW(), 1, 1),
                                                                                                                                                (75, 'UX 디자인 프로세스에서 페르소나를 만드는 것이 왜 중요한가요?', '페르소나는 사용자 유형을 나타내어 실제 사용자의 행동 및 요구를 기반으로 디자인 결정을 안내하는 데 도움을 줍니다.', 4, 9, NOW(), NOW(), 1, 1),
                                                                                                                                                (76, '사용자로부터 받은 피드백을 디자인 반복에 어떻게 통합하나요?', '정기적으로 사용자 피드백을 수집 및 분석한 후, 이를 디자인 개선에 반영합니다.', 4, 9, NOW(), NOW(), 1, 1);

-- 그래픽 디자인 관련 질문 (role_id = 5)
INSERT INTO interview_question (id, question, ideal_answer, role_id, interview_category_id, created_at, updated_at, created_by, updated_by) VALUES
                                                                                                                                                (77, '벡터 그래픽과 래스터 그래픽의 차이점은 무엇인가요?', '벡터 그래픽은 경로로 만들어지고, 래스터 그래픽은 픽셀로 만들어집니다.', 5, 10, NOW(), NOW(), 1, 1),
                                                                                                                                                (78, '디자인에서 색채 이론을 어떻게 적용하나요?', '색채 이론은 잘 어울리고 원하는 분위기나 메시지를 전달하는 색상 선택을 안내하는 데 도움을 줍니다.', 5, 10, NOW(), NOW(), 1, 1),
                                                                                                                                                (79, '그래픽 디자인에서 잘 균형 잡힌 레이아웃의 주요 요소는 무엇인가요?', '시각적 계층 구조, 정렬, 일관된 간격 등이 잘 균형 잡힌 레이아웃을 구성합니다.', 5, 10, NOW(), NOW(), 1, 1),
                                                                                                                                                (80, '디자인의 가독성을 향상시키기 위해 타이포그래피를 어떻게 사용하나요?', '적절한 폰트, 크기, 행 간격을 선택하면 가독성을 크게 향상시킬 수 있습니다.', 5, 10, NOW(), NOW(), 1, 1),
                                                                                                                                                (81, '그래픽 디자인에서 브랜딩의 역할은 무엇인가요?', '브랜딩은 일관된 로고, 색상, 디자인 스타일을 통해 기업의 통일된 이미지와 정체성을 만듭니다.', 5, 10, NOW(), NOW(), 1, 1),
                                                                                                                                                (82, '로고를 처음부터 최종 제품까지 설계하는 과정을 설명하세요.', '로고 설계는 브레인스토밍, 스케치, 수정 및 벡터 형식으로 최종 디자인을 완료하는 과정을 거칩니다.', 5, 10, NOW(), NOW(), 1, 1),
                                                                                                                                                (83, '다양한 디자인 자산에서 일관성을 어떻게 유지하나요?', '스타일 가이드, 템플릿 및 일관된 타이포그래피, 색상, 간격 사용을 통해 일관성을 유지합니다.', 5, 10, NOW(), NOW(), 1, 1),
                                                                                                                                                (84, '디자인 과정에서 클라이언트의 피드백과 수정을 어떻게 처리하나요?', '명확한 의사소통을 통해 클라이언트의 목표를 이해하고 디자인의 무결성을 유지하면서 피드백을 반영합니다.', 5, 10, NOW(), NOW(), 1, 1),
                                                                                                                                                (85, '디자인 워크플로에서 그리드를 사용하는 중요성은 무엇인가요?', '그리드는 구조와 정렬을 만들어 디자인을 더 일관되고 탐색하기 쉽게 만듭니다.', 5, 10, NOW(), NOW(), 1, 1),
                                                                                                                                                (86, '인쇄와 웹 형식에 맞게 이미지를 최적화하는 방법은 무엇인가요?', '인쇄용 이미지는 고해상도(300dpi)로 설정하고, 웹용 이미지는 압축하여 빠른 로딩 속도를 위해 최적화해야 합니다.', 5, 10, NOW(), NOW(), 1, 1);

-- 프로젝트 관리 관련 질문 (role_id = 6)
INSERT INTO interview_question (id, question, ideal_answer, role_id, interview_category_id, created_at, updated_at, created_by, updated_by) VALUES
                                                                                                                                                (87, '긴급한 기한이 있는 프로젝트에서 작업의 우선순위를 어떻게 정하나요?', '우선순위는 긴급성, 영향 및 리소스 가용성을 기반으로 MoSCoW 또는 아이젠하워 매트릭스와 같은 방법을 사용하여 결정합니다.', 6, 11, NOW(), NOW(), 1, 1),
                                                                                                                                                (88, '애자일과 워터폴 방법론의 차이점은 무엇인가요?', '애자일은 반복적이고 유연한 방법이며, 워터폴은 선형적이고 순차적인 방법입니다.', 6, 11, NOW(), NOW(), 1, 1),
                                                                                                                                                (89, '프로젝트에서 범위 확장을 어떻게 처리하나요?', '명확한 문서화, 변경 관리 프로세스 및 이해관계자와의 지속적인 의사소통을 통해 범위 확장을 관리할 수 있습니다.', 6, 11, NOW(), NOW(), 1, 1),
                                                                                                                                                (90, '프로젝트 계획에서 리스크 관리의 중요성은 무엇인가요?', '리스크 관리는 잠재적인 문제를 조기에 식별하고, 이를 사전에 완화할 수 있는 전략을 마련하는 데 도움을 줍니다.', 6, 11, NOW(), NOW(), 1, 1),
                                                                                                                                                (91, '팀원 간의 효과적인 의사소통을 어떻게 보장하나요?', '정기적인 회의, 명확한 문서화, 협업 도구 사용을 통해 효과적인 의사소통을 보장합니다.', 6, 11, NOW(), NOW(), 1, 1),
                                                                                                                                                (92, '프로젝트의 진행 상황과 마일스톤을 추적하는 데 사용하는 도구는 무엇인가요?', 'Jira, Trello 및 Microsoft Project와 같은 도구를 사용하여 진행 상황을 추적하고 마일스톤이 달성되었는지 확인합니다.', 6, 11, NOW(), NOW(), 1, 1),
                                                                                                                                                (93, '리소스가 제한되거나 과다 할당된 경우 리소스를 어떻게 관리하나요?', '작업 재할당, 필수 작업 우선순위화 및 필요한 경우 추가 리소스를 투입하여 관리할 수 있습니다.', 6, 11, NOW(), NOW(), 1, 1),
                                                                                                                                                (94, '프로젝트 팀 내 갈등을 어떻게 처리하나요?', '중재, 열린 의사소통 및 공통 프로젝트 목표에 집중함으로써 갈등을 해결할 수 있습니다.', 6, 11, NOW(), NOW(), 1, 1),
                                                                                                                                                (95, '프로젝트 성공에서 이해관계자 관리는 왜 중요한가요?', '이해관계자 관리는 기대를 충족시키고, 프로젝트 전반에 걸쳐 그들의 의견이 반영되도록 합니다.', 6, 11, NOW(), NOW(), 1, 1),
                                                                                                                                                (96, '프로젝트가 예산 내에 머물도록 어떻게 보장하나요?', '경비 추적, 리소스 관리 및 필요 시 범위를 조정하여 예산 준수를 달성할 수 있습니다.', 6, 11, NOW(), NOW(), 1, 1);

-- 영상 편집 관련 질문 (role_id = 7)
INSERT INTO interview_question (id, question, ideal_answer, role_id, interview_category_id, created_at, updated_at, created_by, updated_by) VALUES
                                                                                                                                                (97, '선형 편집과 비선형 편집의 주요 차이점은 무엇인가요?', '선형 편집은 순차적으로 이루어지며, 비선형 편집은 프로젝트 타임라인의 어느 지점에서든 편집할 수 있습니다.', 7, 12, NOW(), NOW(), 1, 1),
                                                                                                                                                (98, '비디오의 다양한 클립 간 색상 일관성을 어떻게 보장하나요?', '색 보정 도구와 그레이딩을 통해 모든 클립에서 색상이 일관되도록 할 수 있습니다.', 7, 12, NOW(), NOW(), 1, 1),
                                                                                                                                                (99, '영상 편집에서 페이싱(속도)이 중요한 이유는 무엇인가요?', '페이싱은 비디오의 흐름에 영향을 미치며, 스토리의 감정적 영향을 강화할 수 있습니다.', 7, 12, NOW(), NOW(), 1, 1),
                                                                                                                                                (100, '영상 편집에서 J컷과 L컷의 개념을 설명하세요.', 'J컷은 오디오가 비디오보다 먼저 시작되도록 하고, L컷은 오디오가 비디오가 끝난 후에도 계속되도록 합니다.', 7, 12, NOW(), NOW(), 1, 1),
                                                                                                                                                (101, '대형 프로젝트에서 미디어 자산을 어떻게 구성하나요?', '미디어 자산은 폴더, 빈 및 메타데이터를 사용하여 쉽게 액세스하고 효율적인 워크플로를 보장할 수 있도록 구성합니다.', 7, 12, NOW(), NOW(), 1, 1),
                                                                                                                                                (102, '비디오에 효과 및 전환을 추가할 때 모범 사례는 무엇인가요?', '효과와 전환은 미묘하게 적용되어 스토리를 보강해야 하며, 주의를 산만하게 해서는 안 됩니다.', 7, 12, NOW(), NOW(), 1, 1),
                                                                                                                                                (103, '오디오 및 비디오 트랙의 동기화를 어떻게 처리하나요?', '오디오 파형을 맞추거나 타임코드와 동기화 도구를 사용하여 동기화를 맞출 수 있습니다.', 7, 12, NOW(), NOW(), 1, 1),
                                                                                                                                                (104, '비디오 구도에서 삼분할 법칙의 중요성은 무엇인가요?', '삼분할 법칙은 화면을 9등분하여 시각적으로 매력적인 구도를 만듭니다.', 7, 12, NOW(), NOW(), 1, 1),
                                                                                                                                                (105, '유튜브나 인스타그램과 같은 다양한 플랫폼에 비디오를 최적화하는 방법은 무엇인가요?', '플랫폼별로 올바른 비율, 해상도 및 압축 설정을 사용하는 것이 중요합니다.', 7, 12, NOW(), NOW(), 1, 1),
                                                                                                                                                (106, '영상 편집 소프트웨어로 무엇을 선호하며, 그 이유는 무엇인가요?', '프로젝트의 필요에 따라 다르지만, Adobe Premiere Pro와 Final Cut Pro는 고급 기능과 워크플로 효율성 때문에 인기가 많습니다.', 7, 12, NOW(), NOW(), 1, 1);
